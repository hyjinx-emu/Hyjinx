name: build

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened]
  push:

env:
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  
jobs:
  build:
    name: ${{ matrix.platform.name }} (${{ matrix.configuration }})
    runs-on: ${{ matrix.platform.os }}
    timeout-minutes: 45
    strategy:
      matrix:
        configuration: [Release]
        platform:
          - { name: win-x64,     os: windows-latest, zip_os_name: win_x64     }
          - { name: linux-x64,   os: ubuntu-latest,  zip_os_name: linux_x64   }
          - { name: linux-arm64, os: ubuntu-latest,  zip_os_name: linux_arm64 }
#          - { name: osx-x64,     os: macos-13,       zip_os_name: osx_x64     }

      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Get git short hash
        id: git_short_hash
        run: echo "result=$(git rev-parse --short "${{ github.sha }}")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build
        run: dotnet build -c "${{ matrix.configuration }}" --version-suffix "${{ steps.git_short_hash.outputs.result }}"

      - name: Run tests
        run: dotnet test --no-build -c "${{ matrix.configuration }}"
        timeout-minutes: 10

#      - name: Set executable bit
#        if: github.event_name == 'pull_request' && matrix.platform.os == 'ubuntu-latest'
#        run: |
#          chmod +x ./publish/Hyjinx ./publish/Hyjinx.sh
#          chmod +x ./publish_sdl2_headless/Hyjinx.Headless.SDL2 ./publish_sdl2_headless/Hyjinx.sh
#          chmod +x ./publish_gtk/Hyjinx.Gtk3 ./publish_gtk/Hyjinx.sh

#      - name: Build AppImage
#        if: github.event_name == 'pull_request' && matrix.platform.os == 'ubuntu-latest'
#        run: |
#          PLATFORM_NAME="${{ matrix.platform.name }}"

#          sudo apt install -y zsync desktop-file-utils appstream

#          mkdir -p tools
#          export PATH="$PATH:$(readlink -f tools)"

#          # Setup appimagetool
#          wget -q -O tools/appimagetool "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage"
#          chmod +x tools/appimagetool

#          # Explicitly set $ARCH for appimagetool ($ARCH_NAME is for the file name)
#          if [ "$PLATFORM_NAME" = "linux-x64" ]; then
#            ARCH_NAME=x64
#            export ARCH=x86_64
#          elif [ "$PLATFORM_NAME" = "linux-arm64" ]; then
#            ARCH_NAME=arm64
#            export ARCH=aarch64
#          else
#            echo "Unexpected PLATFORM_NAME "$PLATFORM_NAME""
#            exit 1
#          fi

#          export UFLAG="gh-releases-zsync|${{ github.repository_owner }}|${{ github.event.repository.name }}|latest|*-$ARCH_NAME.AppImage.zsync"
#          BUILDDIR=publish OUTDIR=publish_appimage distribution/linux/appimage/build-appimage.sh
#        shell: bash

#      - name: Upload Hyjinx artifact
#        uses: actions/upload-artifact@v4
#        if: github.event_name == 'pull_request' && matrix.platform.os != 'macos-13'
#        with:
#          name: hyjinx-${{ matrix.configuration }}-${{ env.HYJINX_BASE_VERSION }}+${{ steps.git_short_hash.outputs.result }}-${{ matrix.platform.zip_os_name }}
#          path: publish

#      - name: Upload Hyjinx (AppImage) artifact
#        uses: actions/upload-artifact@v4
#        if: github.event_name == 'pull_request' && matrix.platform.os == 'ubuntu-latest'
#        with:
#          name: hyjinx-${{ matrix.configuration }}-${{ env.HYJINX_BASE_VERSION }}+${{ steps.git_short_hash.outputs.result }}-${{ matrix.platform.zip_os_name }}-AppImage
#          path: publish_appimage

#      - name: Upload Hyjinx.Headless.SDL2 artifact
#        uses: actions/upload-artifact@v4
#        if: github.event_name == 'pull_request' && matrix.platform.os != 'macos-13'
#        with:
#          name: sdl2-hyjinx-headless-${{ matrix.configuration }}-${{ env.HYJINX_BASE_VERSION }}+${{ steps.git_short_hash.outputs.result }}-${{ matrix.platform.zip_os_name }}
#          path: publish_sdl2_headless

#      - name: Upload Hyjinx.Gtk3 artifact
#        uses: actions/upload-artifact@v4
#        if: github.event_name == 'pull_request' && matrix.platform.os != 'macos-13'
#        with:
#          name: gtk-hyjinx-${{ matrix.configuration }}-${{ env.HYJINX_BASE_VERSION }}+${{ steps.git_short_hash.outputs.result }}-${{ matrix.platform.zip_os_name }}
#          path: publish_gtk

name: build

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened]
  push:

env:
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  
jobs:
  build:
    name: ${{ matrix.platform.name }} (${{ matrix.configuration }})
    runs-on: ${{ matrix.platform.os }}
    timeout-minutes: 45
    strategy:
      matrix:
        configuration: [Release]
        platform:
          - { name: win-x64,     os: windows-latest, zip_os_name: win_x64     }
          - { name: linux-x64,   os: ubuntu-latest,  zip_os_name: linux_x64   }
          - { name: linux-arm64, os: ubuntu-latest,  zip_os_name: linux_arm64 }
#          - { name: osx-x64,     os: macos-13,       zip_os_name: osx_x64     }

      fail-fast: false
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
          
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Install SonarQube Cloud Scanner
        run: |
          mkdir ./.sonar
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar
          
      - name: Determine Git Hash
        id: git_short_hash
        run: echo "result=$(git rev-parse --short "${{ github.sha }}")" >> $GITHUB_OUTPUT
        shell: bash
        
      - name: Prepare Analysis
        run: |
          ./.sonar/dotnet-sonarscanner begin /k:"hyjinx-emu_Hyjinx" /o:"hyjinx-emu" /d:sonar.projectBaseDir="./src" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          
      - name: Build
        run: dotnet build -c "${{ matrix.configuration }}" --version-suffix "${{ steps.git_short_hash.outputs.result }}"

      - name: Run tests
        run: dotnet test --no-build -c "${{ matrix.configuration }}"
        timeout-minutes: 10
      
      - name: Publish Analysis
        run: |
          ./.sonar/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
